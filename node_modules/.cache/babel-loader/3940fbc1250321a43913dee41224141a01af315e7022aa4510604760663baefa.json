{"ast":null,"code":"const API_BASE_URL = 'https://webshield100-backend.onrender.com/api';\nexport const apiCall = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers\n    },\n    ...options\n  };\n  // Agregar token \n  const token = localStorage.getItem('webshield_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.log('Token agregado a la request');\n  }\n  try {\n    console.log('Enviando request...');\n    const response = await fetch(url, config);\n    console.log('Response status:', response.status);\n    console.log('Response headers:', [...response.headers.entries()]);\n    const data = await response.json();\n    console.log('Response data:', data);\n    if (!response.ok) {\n      throw new Error(data.error || `HTTP error! status: ${response.status}`);\n    }\n    return data;\n  } catch (error) {\n    console.error('API Error:', error);\n    console.error('Error stack:', error.stack);\n    throw error;\n  }\n};\n\n// Funciones de la API\nexport const authAPI = {\n  register: userData => apiCall('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData)\n  }),\n  login: credentials => apiCall('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials)\n  }),\n  getProfile: () => apiCall('/auth/profile')\n};\nexport const projectsAPI = {\n  getAll: () => apiCall('/projects'),\n  create: projectData => apiCall('/projects', {\n    method: 'POST',\n    body: JSON.stringify(projectData)\n  }),\n  getById: id => apiCall(`/projects/${id}`),\n  update: (id, projectData) => apiCall(`/projects/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(projectData)\n  }),\n  delete: id => apiCall(`/projects/${id}`, {\n    method: 'DELETE'\n  }),\n  save: (id, elements) => {\n    console.log(' projectsAPI.save llamado');\n    console.log('  > iD del proyecto:', id);\n    console.log('  > elementos recibidos:', elements);\n    console.log('  > tipo de elements:', typeof elements);\n    console.log('  > es un array?:', Array.isArray(elements));\n    console.log('  > cantidad de elementos:', elements === null || elements === void 0 ? void 0 : elements.length);\n\n    // Validación antes de enviar\n    if (!id) {\n      console.error(' Error: ID del proyecto no proporcionado');\n      throw new Error('ID del proyecto es requerido');\n    }\n    if (!Array.isArray(elements)) {\n      console.error(' Error: elements no es un array:', elements);\n      throw new Error('Elements debe ser un array');\n    }\n\n    // Validar estructura de cada elemento\n    const invalidElements = elements.filter((el, index) => {\n      if (!el || typeof el !== 'object') {\n        console.error(` Elemento ${index + 1} no es un objeto:`, el);\n        return true;\n      }\n      if (!el.type) {\n        console.error(` Elemento ${index + 1} no tiene tipo:`, el);\n        return true;\n      }\n      return false;\n    });\n    if (invalidElements.length > 0) {\n      throw new Error(`${invalidElements.length} elemento(s) tienen estructura inválida`);\n    }\n\n    // Limpiar elementos antes de enviar\n    const cleanElements = elements.map(el => ({\n      type: el.type,\n      settings: el.settings || {}\n    }));\n    console.log('  → Elementos limpiados para enviar:', cleanElements);\n    return apiCall(`/projects/${id}/save`, {\n      method: 'POST',\n      body: JSON.stringify({\n        elements: cleanElements\n      })\n    });\n  },\n  export: id => apiCall(`/projects/${id}/export`),\n  search: query => apiCall(`/projects/search?q=${encodeURIComponent(query)}`),\n  duplicate: id => apiCall(`/projects/${id}/duplicate`, {\n    method: 'POST'\n  })\n};\nexport const elementsAPI = {\n  create: (projectId, elementData) => {\n    console.log('Calling create element for project:', projectId, elementData);\n    return apiCall(`/projects/${projectId}/elements`, {\n      method: 'POST',\n      body: JSON.stringify(elementData)\n    });\n  },\n  update: (id, elementData) => {\n    console.log('Calling update element:', id, elementData);\n    return apiCall(`/elements/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(elementData)\n    });\n  },\n  delete: id => {\n    console.log('Calling delete element:', id);\n    return apiCall(`/elements/${id}`, {\n      method: 'DELETE'\n    });\n  }\n};\nexport const paymentsAPI = {\n  createIntent: paymentData => apiCall('/payments/create-intent', {\n    method: 'POST',\n    body: JSON.stringify(paymentData)\n  }),\n  confirm: (id, confirmationData) => apiCall(`/payments/${id}/confirm`, {\n    method: 'POST',\n    body: JSON.stringify(confirmationData)\n  }),\n  getHistory: () => apiCall('/payments')\n};\nexport const statsAPI = {\n  get: () => apiCall('/stats')\n};\n\n// Utilidades\nexport const storage = {\n  setToken: token => {\n    console.log('Setting token in localStorage');\n    localStorage.setItem('webshield_token', token);\n  },\n  getToken: () => {\n    const token = localStorage.getItem('webshield_token');\n    console.log('Getting token from localStorage:', token ? 'Token exists' : 'No token');\n    return token;\n  },\n  removeToken: () => {\n    console.log('Removing token from localStorage');\n    localStorage.removeItem('webshield_token');\n  },\n  isLoggedIn: () => {\n    const isLoggedIn = !!localStorage.getItem('webshield_token');\n    console.log('Checking if logged in:', isLoggedIn);\n    return isLoggedIn;\n  }\n};\nexport const loadUserProfile = async () => {\n  try {\n    const response = await authAPI.getProfile();\n    // Retornar los datos en lugar de setear estado directamente\n    return response;\n  } catch (error) {\n    localStorage.removeItem('webshield_token');\n    throw error; // Propagar el error para que el componente lo maneje\n  }\n};\nexport const loadProjects = async () => {\n  try {\n    const response = await projectsAPI.getAll();\n    return response;\n  } catch (error) {\n    console.error('Error loading projects:', error);\n    throw error;\n  }\n};\nexport const loadStats = async () => {\n  try {\n    const response = await statsAPI.get();\n    return response;\n  } catch (error) {\n    console.error('Error loading stats:', error);\n    throw error;\n  }\n};\nexport const loadPaymentHistory = async () => {\n  try {\n    const response = await paymentsAPI.getHistory();\n    return response;\n  } catch (error) {\n    console.error('Error loading payment history:', error);\n    throw error;\n  }\n};\nexport const dataLoaders = {\n  loadUserProfile,\n  loadProjects,\n  loadStats,\n  loadPaymentHistory\n};\nexport default {\n  authAPI,\n  projectsAPI,\n  elementsAPI,\n  paymentsAPI,\n  statsAPI,\n  dataLoaders,\n  storage\n};","map":{"version":3,"names":["API_BASE_URL","apiCall","endpoint","options","url","config","headers","token","localStorage","getItem","console","log","response","fetch","status","entries","data","json","ok","Error","error","stack","authAPI","register","userData","method","body","JSON","stringify","login","credentials","getProfile","projectsAPI","getAll","create","projectData","getById","id","update","delete","save","elements","Array","isArray","length","invalidElements","filter","el","index","type","cleanElements","map","settings","export","search","query","encodeURIComponent","duplicate","elementsAPI","projectId","elementData","paymentsAPI","createIntent","paymentData","confirm","confirmationData","getHistory","statsAPI","get","storage","setToken","setItem","getToken","removeToken","removeItem","isLoggedIn","loadUserProfile","loadProjects","loadStats","loadPaymentHistory","dataLoaders"],"sources":["/home/fred/webshield100-frontend/src/api/config.js"],"sourcesContent":["const API_BASE_URL = 'https://webshield100-backend.onrender.com/api';\nexport const apiCall = async (endpoint, options = {}) => {\n  const url = `${API_BASE_URL}${endpoint}`;\n  const config = {\n    headers: {\n      'Content-Type': 'application/json',\n      ...options.headers,\n    },\n    ...options,\n  };\n  // Agregar token \n  const token = localStorage.getItem('webshield_token');\n  if (token) {\n    config.headers['Authorization'] = `Bearer ${token}`;\n    console.log('Token agregado a la request');\n  }\n\n  try {\n    console.log('Enviando request...');\n    const response = await fetch(url, config);\n    console.log('Response status:', response.status);\n    console.log('Response headers:', [...response.headers.entries()]);\n\n    const data = await response.json();\n    console.log('Response data:', data);\n\n    if (!response.ok) {\n      throw new Error(data.error || `HTTP error! status: ${response.status}`);\n    }\n    return data;\n  } catch (error) {\n    console.error('API Error:', error);\n    console.error('Error stack:', error.stack);\n    throw error;\n  }\n};\n\n// Funciones de la API\nexport const authAPI = {\n  register: (userData) => apiCall('/auth/register', {\n    method: 'POST',\n    body: JSON.stringify(userData),\n  }),\n  login: (credentials) => apiCall('/auth/login', {\n    method: 'POST',\n    body: JSON.stringify(credentials),\n  }),\n  getProfile: () => apiCall('/auth/profile'),\n};\n\n\nexport const projectsAPI = {\n  getAll: () => apiCall('/projects'),\n\n  create: (projectData) => apiCall('/projects', {\n    method: 'POST',\n    body: JSON.stringify(projectData),\n  }),\n\n  getById: (id) => apiCall(`/projects/${id}`),\n\n  update: (id, projectData) => apiCall(`/projects/${id}`, {\n    method: 'PUT',\n    body: JSON.stringify(projectData),\n  }),\n\n  delete: (id) => apiCall(`/projects/${id}`, { method: 'DELETE' }),\n\n  save: (id, elements) => {\n    console.log(' projectsAPI.save llamado');\n    console.log('  > iD del proyecto:', id);\n    console.log('  > elementos recibidos:', elements);\n    console.log('  > tipo de elements:', typeof elements);\n    console.log('  > es un array?:', Array.isArray(elements));\n    console.log('  > cantidad de elementos:', elements?.length);\n\n    // Validación antes de enviar\n    if (!id) {\n      console.error(' Error: ID del proyecto no proporcionado');\n      throw new Error('ID del proyecto es requerido');\n    }\n\n    if (!Array.isArray(elements)) {\n      console.error(' Error: elements no es un array:', elements);\n      throw new Error('Elements debe ser un array');\n    }\n\n    // Validar estructura de cada elemento\n    const invalidElements = elements.filter((el, index) => {\n      if (!el || typeof el !== 'object') {\n        console.error(` Elemento ${index + 1} no es un objeto:`, el);\n        return true;\n      }\n      if (!el.type) {\n        console.error(` Elemento ${index + 1} no tiene tipo:`, el);\n        return true;\n      }\n      return false;\n    });\n\n    if (invalidElements.length > 0) {\n      throw new Error(`${invalidElements.length} elemento(s) tienen estructura inválida`);\n    }\n\n    // Limpiar elementos antes de enviar\n    const cleanElements = elements.map(el => ({\n      type: el.type,\n      settings: el.settings || {}\n    }));\n\n    console.log('  → Elementos limpiados para enviar:', cleanElements);\n\n    return apiCall(`/projects/${id}/save`, {\n      method: 'POST',\n      body: JSON.stringify({ elements: cleanElements }),\n    });\n  },\n\n  export: (id) => apiCall(`/projects/${id}/export`),\n\n  search: (query) => apiCall(`/projects/search?q=${encodeURIComponent(query)}`),\n\n  duplicate: (id) => apiCall(`/projects/${id}/duplicate`, { method: 'POST' }),\n};\nexport const elementsAPI = {\n  create: (projectId, elementData) => {\n    console.log('Calling create element for project:', projectId, elementData);\n    return apiCall(`/projects/${projectId}/elements`, {\n      method: 'POST',\n      body: JSON.stringify(elementData),\n    });\n  },\n\n  update: (id, elementData) => {\n    console.log('Calling update element:', id, elementData);\n    return apiCall(`/elements/${id}`, {\n      method: 'PUT',\n      body: JSON.stringify(elementData),\n    });\n  },\n\n  delete: (id) => {\n    console.log('Calling delete element:', id);\n    return apiCall(`/elements/${id}`, {\n      method: 'DELETE',\n    });\n  },\n};\n\nexport const paymentsAPI = {\n  createIntent: (paymentData) => apiCall('/payments/create-intent', {\n    method: 'POST',\n    body: JSON.stringify(paymentData),\n  }),\n  confirm: (id, confirmationData) => apiCall(`/payments/${id}/confirm`, {\n    method: 'POST',\n    body: JSON.stringify(confirmationData),\n  }),\n  getHistory: () => apiCall('/payments'),\n};\n\nexport const statsAPI = {\n  get: () => apiCall('/stats'),\n\n};\n\n// Utilidades\nexport const storage = {\n  setToken: (token) => {\n    console.log('Setting token in localStorage');\n    localStorage.setItem('webshield_token', token);\n  },\n\n  getToken: () => {\n    const token = localStorage.getItem('webshield_token');\n    console.log('Getting token from localStorage:', token ? 'Token exists' : 'No token');\n    return token;\n  },\n\n  removeToken: () => {\n    console.log('Removing token from localStorage');\n    localStorage.removeItem('webshield_token');\n  },\n\n  isLoggedIn: () => {\n    const isLoggedIn = !!localStorage.getItem('webshield_token');\n    console.log('Checking if logged in:', isLoggedIn);\n    return isLoggedIn;\n  },\n};\nexport const loadUserProfile = async () => {\n  try {\n    const response = await authAPI.getProfile();\n    // Retornar los datos en lugar de setear estado directamente\n    return response;\n  } catch (error) {\n    localStorage.removeItem('webshield_token');\n    throw error; // Propagar el error para que el componente lo maneje\n  }\n};\n\nexport const loadProjects = async () => {\n  try {\n    const response = await projectsAPI.getAll();\n    return response;\n  } catch (error) {\n    console.error('Error loading projects:', error);\n    throw error;\n  }\n};\n\nexport const loadStats = async () => {\n  try {\n    const response = await statsAPI.get();\n    return response;\n  } catch (error) {\n    console.error('Error loading stats:', error);\n    throw error;\n  }\n};\n\nexport const loadPaymentHistory = async () => {\n  try {\n    const response = await paymentsAPI.getHistory();\n    return response;\n  } catch (error) {\n    console.error('Error loading payment history:', error);\n    throw error;\n  }\n};\n\nexport const dataLoaders = {\n  loadUserProfile,\n  loadProjects,\n  loadStats,\n  loadPaymentHistory\n};\n\nexport default {\n  authAPI,\n  projectsAPI,\n  elementsAPI,\n  paymentsAPI,\n  statsAPI,\n  dataLoaders,\n  storage\n}\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}