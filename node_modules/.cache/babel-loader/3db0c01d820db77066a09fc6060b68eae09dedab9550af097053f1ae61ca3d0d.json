{"ast":null,"code":"import { ELEMENT_DEFAULTS, DEFAULT_ELEMENT_SETTINGS } from '../constants/appConstants.js';\nexport const getDefaultContent = type => {\n  return ELEMENT_DEFAULTS[type] || '';\n};\nexport const createNewElement = element => {\n  return {\n    ...element,\n    id: `${element.id}-${Date.now()}`,\n    settings: {\n      content: getDefaultContent(element.type),\n      ...DEFAULT_ELEMENT_SETTINGS\n    }\n  };\n};\nexport const addNotification = (setNotifications, message, type = 'info') => {\n  const notification = {\n    id: Date.now(),\n    message,\n    type,\n    timestamp: new Date()\n  };\n  setNotifications(prev => [...prev, notification]);\n\n  // Auto-remove después de 5 segundos\n  setTimeout(() => {\n    setNotifications(prev => prev.filter(n => n.id !== notification.id));\n  }, 5000);\n};\nexport const saveToHistory = (history, historyIndex, elements, setHistory, setHistoryIndex) => {\n  const newHistory = history.slice(0, historyIndex + 1);\n  newHistory.push([...elements]);\n  setHistory(newHistory);\n  setHistoryIndex(newHistory.length - 1);\n};\nexport const validateUserPlan = (user, action) => {\n  if (!user) return {\n    allowed: false,\n    reason: 'Usuario no autenticado'\n  };\n  switch (action) {\n    case 'add_element':\n      if (user.plan === 'free' && user.elementsUsed >= 3) {\n        return {\n          allowed: false,\n          reason: 'Límite de elementos alcanzado. Actualiza tu plan.'\n        };\n      }\n      break;\n    case 'create_project':\n      if (user.plan === 'free' && user.projectsCount >= 1) {\n        return {\n          allowed: false,\n          reason: 'Límite de proyectos alcanzado. Actualiza tu plan.'\n        };\n      }\n      break;\n    case 'export_html':\n      if (user.plan === 'free') {\n        return {\n          allowed: false,\n          reason: 'Función solo disponible en plan Pro+'\n        };\n      }\n      break;\n    case 'save_project':\n      if (user.plan === 'free') {\n        return {\n          allowed: false,\n          reason: 'Función solo disponible en plan Pro+'\n        };\n      }\n      break;\n  }\n  return {\n    allowed: true\n  };\n};\nexport const getSizeClasses = size => {\n  switch (size) {\n    case 'small':\n      return 'text-sm p-2';\n    case 'large':\n      return 'text-xl p-6';\n    default:\n      return 'text-base p-4';\n  }\n};\nexport const getCanvasPermissions = userPlan => {\n  return {\n    canExport: userPlan === 'pro' || userPlan === 'premium',\n    canSave: userPlan === 'pro' || userPlan === 'premium',\n    maxElements: userPlan === 'free' ? 3 : Infinity,\n    maxProjects: userPlan === 'free' ? 1 : Infinity\n  };\n};","map":{"version":3,"names":["ELEMENT_DEFAULTS","DEFAULT_ELEMENT_SETTINGS","getDefaultContent","type","createNewElement","element","id","Date","now","settings","content","addNotification","setNotifications","message","notification","timestamp","prev","setTimeout","filter","n","saveToHistory","history","historyIndex","elements","setHistory","setHistoryIndex","newHistory","slice","push","length","validateUserPlan","user","action","allowed","reason","plan","elementsUsed","projectsCount","getSizeClasses","size","getCanvasPermissions","userPlan","canExport","canSave","maxElements","Infinity","maxProjects"],"sources":["/home/fred/webshield100-frontend/src/utils/appUtils.js"],"sourcesContent":["import { ELEMENT_DEFAULTS, DEFAULT_ELEMENT_SETTINGS } from '../constants/appConstants.js';\n\nexport const getDefaultContent = (type) => {\n  return ELEMENT_DEFAULTS[type] || '';\n};\n\nexport const createNewElement = (element) => {\n  return {\n    ...element,\n    id: `${element.id}-${Date.now()}`,\n    settings: {\n      content: getDefaultContent(element.type),\n      ...DEFAULT_ELEMENT_SETTINGS\n    }\n  };\n};\n\nexport const addNotification = (setNotifications, message, type = 'info') => {\n  const notification = {\n    id: Date.now(),\n    message,\n    type,\n    timestamp: new Date()\n  };\n  \n  setNotifications(prev => [...prev, notification]);\n  \n  // Auto-remove después de 5 segundos\n  setTimeout(() => {\n    setNotifications(prev => prev.filter(n => n.id !== notification.id));\n  }, 5000);\n};\n\nexport const saveToHistory = (history, historyIndex, elements, setHistory, setHistoryIndex) => {\n  const newHistory = history.slice(0, historyIndex + 1);\n  newHistory.push([...elements]);\n  setHistory(newHistory);\n  setHistoryIndex(newHistory.length - 1);\n};\n\nexport const validateUserPlan = (user, action) => {\n  if (!user) return { allowed: false, reason: 'Usuario no autenticado' };\n  \n  switch (action) {\n    case 'add_element':\n      if (user.plan === 'free' && user.elementsUsed >= 3) {\n        return { allowed: false, reason: 'Límite de elementos alcanzado. Actualiza tu plan.' };\n      }\n      break;\n    case 'create_project':\n      if (user.plan === 'free' && user.projectsCount >= 1) {\n        return { allowed: false, reason: 'Límite de proyectos alcanzado. Actualiza tu plan.' };\n      }\n      break;\n    case 'export_html':\n      if (user.plan === 'free') {\n        return { allowed: false, reason: 'Función solo disponible en plan Pro+' };\n      }\n      break;\n    case 'save_project':\n      if (user.plan === 'free') {\n        return { allowed: false, reason: 'Función solo disponible en plan Pro+' };\n      }\n      break;\n  }\n  \n  return { allowed: true };\n};\n\nexport const getSizeClasses = (size) => {\n  switch (size) {\n    case 'small': return 'text-sm p-2';\n    case 'large': return 'text-xl p-6';\n    default: return 'text-base p-4';\n  }\n};\n\nexport const getCanvasPermissions = (userPlan) => {\n  return {\n    canExport: userPlan === 'pro' || userPlan === 'premium',\n    canSave: userPlan === 'pro' || userPlan === 'premium',\n    maxElements: userPlan === 'free' ? 3 : Infinity,\n    maxProjects: userPlan === 'free' ? 1 : Infinity\n  };\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}